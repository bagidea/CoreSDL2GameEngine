#include "GameEngine.h"

class Level : public Scene
{
public:
	Level();
	~Level();
private:
	void Start();
	void Clean();
	Texture* bg_tex;
	Texture* tile_tex;
	Sprite* bg;
	std::vector<std::vector<Sprite*>> boxs;
};

Level::Level() : Scene(){}
Level::~Level(){Clean();}

void Level::Start()
{
	bg_tex = new Texture("images/BG.png");
	bg = new Sprite(bg_tex);
	bg->SetSize(GameEngine::ScreenWidth, GameEngine::ScreenHeight);
	AddChild(bg);

	tile_tex = new Texture("images/Tiles.png");

	std::vector<Sprite*> c_boxs;
	for(int c = 0; c < 1; c++)
	{
		Sprite* box = new Sprite(tile_tex);
		box->CropImage(0, 0, 128, 128);
		box->SetPosition(c*128, 0);
		AddChild(box);
		c_boxs.push_back(box);
	}
	Sprite* box2 = new Sprite(tile_tex);
	box2->CropImage(0, 0, 128, 128);
	box2->SetPosition(0, 128);
	AddChild(box2);
}

void Level::Clean()
{
	delete bg;
	delete bg_tex;
	delete tile_tex;
}

int main(int argc, char* argv[])
{
	GameEngine* game = new GameEngine("Mini Game", 1280, 720);

	Level* scene = new Level();

	game->SetScene(scene);

	game->Run();

	delete scene;
	delete game;

	return 0;
}
